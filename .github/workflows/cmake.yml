name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Configure CMake Formatter Lib
      run: cmake -B ${{github.workspace}}/formatter_lib/build
      
    - name: Configure CMake Formatter Extended Lib
      run: cmake -B ${{github.workspace}}/formatter_ex_lib/build
      
    - name: Configure CMake Hello World App
      run: cmake -B ${{github.workspace}}/hello_world_application/build
      
    - name: Configure CMake Solver Lib
      run: cmake -B ${{github.workspace}}/solver_lib/build
      
    - name: Configure CMake Solver App
      run: cmake -B ${{github.workspace}}/solver_application/build

    - name: Build Formatter Lib
      run: cmake --build ${{github.workspace}}/formatter_lib/build
      
    - name: Build Formatter Extended Lib
      run: cmake --build ${{github.workspace}}/formatter_ex_lib/build
      
    - name: Build Hello World Application
      run: cmake --build ${{github.workspace}}/hello_world_application/build   

    - name: Build Solver Lib
      run: cmake --build ${{github.workspace}}/solver_lib/build
      
    - name: Build Solver Application
      run: cmake --build ${{github.workspace}}/solver_application/build  
